<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_mmp_3yj_j5">
  <title>Migrating to a Structured Standards-based Documentation Solution</title>
  <prolog>
    <author>Radu Coravu</author>
    <metadata>
      <keywords>
        <keyword outputclass="label">Migrate</keyword>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>Potential clients come to this world of structured content authoring from two main
        sources:<ol id="ol_r5t_mjl_j5">
        <li>They are starting fresh and after a little bit of comparing between structured and
          unstructured editing, between opened and closed solutions and some soul searching they
          come to regard structured authoring with a specific XML standard in general (and usually
            <b>DITA</b> in particular) as the possible solution for them.</li>
        <li>They are migrating from a previous unstructured or structured solution.</li>
      </ol></p>
    <p>I think people in this second category start thinking about structured writing when they
      start encountering certain limitations with their current approach. These limitations they
      experience with their current system could be:<ul id="ul_mgl_lll_j5">
        <li>
          <p>The need to reuse more content. </p>
          <p>With structured <b>XML</b> authoring in general and with <b>DITA</b> in particular you
            have so many ways of reusing content. In a previous blog post I tried to come up with an
            overview about all the ways in which you can reuse content using <b>DITA</b>: <xref
              href="../presentation-reuse/dita_reuse_strategies.dita"/></p>
        </li>
        <li>Produce multiple outputs from the same content using some complex profiling conditions
          which are not supported in the current work flow.</li>
        <li>
          <p>Stop thinking about how the content is styled.</p>
          <p>You may want to focus more on the actual content and on semantically tagging it than on
            the way in which it will be presented in a certain output format.</p>
        </li>
        <li>
          <p>Publish to more output formats than the current editing solution allows.</p>
          <p>Using a widely adopted open source standard like <b>DITA</b> for documentation also
            means having access to a variety of commercial and open source tools to generate various
            output formats from it. For example for obtaining the <b>PDF</b> you have about 5-6
            distinct possible solutions:<xref
              href="ditaToPDF.dita"/>.</p>
        </li>
        <li>
          <p>Enforce certain internal rules on the documents.</p>
          <p> It's hard to impose best practices in unstructured documents. But with structured XML
            content, you can use Schematron to easily cover this aspect and even to provide quick
            fixes for your authors: <xref
              href="SchematronBCs.dita"/>.</p>
        </li>
        <li>
          <p>Benefit of advice and help from a larger community of writers and developers.</p>
          <p>When you are using a closed source solution, you may have only one forum and a couple
            of people willing to help. When you have a larger community you will be able to reach
            out with a single email to lots of people, and somebody may want to help you.</p>
        </li>
        <li>
          <p>Share documentation between different companies. </p>
          <p>If a larger company which uses structured writing takes over a smaller one, the smaller
            company will need to adopt structured writing as well.</p>
        </li>
        <li>
          <p>Own your content.</p>
          <p>Some editing solutions are closed source, you are forced to use a single tool because
            there are no other tools being to read that format. Then you need to ask yourself the
            question: <q>Is this content actually mine?</q></p>
        </li>
        <li>
          <p>Problems with your current tool vendor.</p>
          <p>If the format is closed source and the tool vendor is not responsive to your needs, you
            need to somehow move your content over to a market with multiple tool vendors available
            because competition also means smaller prices and better customer support.</p>
        </li>
      </ul></p>
    <p>Switching to structured content writing also has its problems. And I think the main ones are
        these:<ul id="ul_rjt_crl_j5">
        <li>The people. The fact that we all are reluctant to change. The learning curve. Writers
          might need to re-learn how to structure and write their documentation. Besides the
          technical aspects they will need to learn to divide content in small modules and to reuse
          parts in multiple places. Writers may not be willing to do this. We usually are very
          reluctant to change tools if we do not see instant benefits deriving from it.</li>
        <li>Effort to convert the current available content to structured content. You can either
          choose manual conversion or automated conversion or in most cases a mixture of the two.
          Conversion will never be perfect, you will still need to go through the entire content and
          re-structure it taking into account module-based editing.</li>
        <li>Customize the obtained output format. You may get out of the box various outputs from
          your content but you will always need to customize it to adhere to company standards. If
          you are using the <b>DITA Open Toolkit</b> for publishing you will need basic XSLT
          development skills to customize the <b>PDF</b> and <b>CSS</b> skills to customize the
            <b>XHTML</b> based output.</li>
        <li>Money. You need to spend more money to get new tools, possibly a new <b>CMS</b>.
          Although I consider that starters, for a pilot project <b>DITA</b> does not need to be
          expensive. Here's how we're using <b>DITA</b> internally for our user's manual: <xref
            href="collaboration-for-documenting-software.dita"/>.</li>
        <li>Sometimes you might need to control the styling of your obtained output so much and it
          would be impossible to separate the styling information from the content.</li>
      </ul></p>
    <p>So can we draw a conclusion from all this? </p>
    <p>Well, maybe not everybody interested in structured authoring will succeed to convert to it.
      But I think that one thing will hold true in most cases:</p>
    <p>Once you convert to structured content, you will never go back.  </p>
  </body>
</topic>
