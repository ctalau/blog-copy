<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="embedding_diagrams_in_dita_topics_using_plantuml">
    <title>Embedding Diagrams in DITA topics using PlantUML</title>
    <prolog>
        <author>Radu Coravu</author>
        <metadata>
            <keywords>
                <keyword outputclass="label">DITA Diagrams</keyword>
                <keyword outputclass="label">DITA Publishing Customization</keyword>
            </keywords>
        </metadata>
    </prolog>
    <body>
        <p><xref href="https://plantuml.com/" format="html" scope="external">PlantUML</xref> is a
            neat library that takes textual descriptions of diagrams and produces visual diagrams
            from them. </p>
        <p>Suppose you have a DITA topic that embeds such a textual description of a diagram: <xref
            href="https://github.com/oxygenxml/dita-ot-diagrams-plugin/blob/master/com.oxygenxml.diagrams.svg/samples/testPlantUMLDiagram.dita"
                format="html" scope="external"/>.</p>
        <p><image id="image_lmd_jzh_ckb"
                href="../images/previewPlantUML.png"/></p>
        <p>To provide support in Oxygen for using such diagrams in DITA topics, you need to install
            the following components:<ul id="ul_s2r_yyh_ckb">
                <li>An Oxygen plugin that presents PlantUML textual descriptions as images when
                    editing the content in the <b>Author</b> visual editing mode: <xref
                        href="https://github.com/oxygenxml/wsaccess-javascript-sample-plugins/tree/master/plantuml-images-support"
                        format="html" scope="external"/>. </li>
                <li>A DITA Open Toolkit publishing plugin that, once installed in the DITA Open
                    Toolkit, will convert the textual descriptions to diagrams for both the
                    HTML-based and PDF outputs: <xref
                        href="https://github.com/oxygenxml/dita-ot-diagrams-plugin" format="html"
                        scope="external"/>.</li>
            </ul></p>
        <p>Once you have this setup, you can both visualize the diagrams when editing and publish
            them while having the diagram representations dynamically converted to SVG in the
            published output.</p>
    </body>
</topic>
