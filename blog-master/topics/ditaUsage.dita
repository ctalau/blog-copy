<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_r53_55s_nv">
  <title>DITA Usage Survey</title>
  <prolog>
    <author>Radu Coravu</author>
  </prolog>
  <body>
    <p>A week or two ago I opened a survey about various ways in which people are using DITA. The
      survey was taken by more than 50 distinct DITA users and I think it indicated quite clearly
      some trends in the industry. As I said from the beginning, </p>
    <p>I will try below to sum up some of the results:</p>
    <section id="section_ctp_gvs_nv">
      <title>GIT is on a roll</title>
      <p><b>GIT</b> overcomes <b>Subversion</b> to be the most popular open source solution for
        version control used in <b>DITA</b> projects. Although most users who responded seem to use
        open source solutions for version control, there is a solid portion of them using commercial
          <b>CMS</b>s probably specialized in DITA content. I suspect that people with small to
        medium projects prefer open source solutions because they are more affordable for their
        small group of writers.</p>
    </section>
    <section id="section_jnt_rvs_nv">
      <title>PDF is still the most popular output format</title>
      <p>Most of the participants identified <b>PDF</b> as being their primary output format. Most
        of them output both to <b>PDF</b> and <b>XHTML</b> but the choice of <b>PDF</b> as the
        primary output format looks very clear. </p>
    </section>
    <section id="section_bsm_vvs_nv">
      <title>Indirect addressing is becoming the main way of reusing content</title>
      <p>Plain content references are still used more than content key references but key references
        are strongly used as well so it seems that indirect ways of addressing content win this
        game.</p>
    </section>
    <section id="section_ihy_mws_nv">
      <title>DITA 1.3 features </title>
      <p>Besides the use of key scopes and branch filtering (which comes as no surprise) it would
        see that the <b>troubleshooting</b> topic and use of <b>SVG</b> embedded directly inside
        DITA content come as strong needs that <b>DITA 1.3</b> fulfills.</p>
    </section>
    <section id="section_d1f_sws_nv">
      <title>Popular image formats</title>
      <p>The fact that <b>PNG</b> is the most popular image format comes as no surprise. But
          <b>SVG</b> coming in as a close second identifies an increasing trend of using vectorial
        images in technical documentation. Besides the benefit of being vectorial and not losing
        information when scaled, <b>SVG</b> allows you the unique capability of translating various
        parts of the image.</p>
    </section>
    <section id="section_pyw_kxs_nv">
      <title>Major DITA frustrations</title>
      <p>It would seem there are two major <b>DITA</b> frustrations:<ul id="ul_ztk_mxs_nv">
          <li>PDF Customization difficulties. This in my opinion wins the cake in this category.
            Customizations for the standard PDF output are hard, they required knowledge of XSLT,
            XSL-FO and of the PDF plugin architecture. But alternatives do exist:<xref
              href="ditaToPDF.dita"/></li>
          <li>"DITA is perceived as too complex for casual users." This quote says it all, the entry
            level is high. There are also complains about linking, filtering and reuse. All these
            come from the DITA flexibility and the fact that each new version adds new elements and
            ways of working with content. And although DITA can be specialized and reduced as a
            vocabulary, I suspect not many people are doing that.</li>
        </ul></p>
    </section>
    <p>That's all I wanted to cover in this post, so go ahead, enjoy the survey results and any
      comments are as usual welcomed.</p>
  </body>
</topic>
